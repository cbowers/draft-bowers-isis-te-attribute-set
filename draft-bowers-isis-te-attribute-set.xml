<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc comments="yes"?>
<?rfc compact="yes"?>
<?rfc inline="yes"?>
<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc tocompact="yes"?>
<rfc category="std" docName="draft-bowers-isis-te-attribute-set-00" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="ISIS TE Attribute Sets">
    Extensions to IS-IS to Associate TE Attributes with TE Attribute Sets and 
	SRLGs with SRLG Sets
    </title>

    <author fullname="Chris Bowers" initials="C." surname="Bowers">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1194 N. Mathilda Ave.</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>cbowers@juniper.net</email>
      </address>
    </author>

	<author initials="S." surname="Hegde" fullname="Shraddha Hegde">
		<organization>Juniper Networks</organization>
		<address>
		<postal>
			<street>Embassy Business Park</street>
			<city>Bangalore</city>
			<region>KA</region>
			<code>560093</code>
			<country>India</country>
		</postal>
		<email>shraddha@juniper.net</email>
		</address>
	</author>

    <date day="3" month="July" year="2017"/>

    <area>Routing</area>

    <workgroup>ISIS Working Group</workgroup>

<abstract>

<t> This document specifies encodings that allow traffic engineering
attributes to be associated with different TE attribute set identifiers and
SRLGs to be associated with SRLG set identifiers.
</t>

</abstract>

</front>

<middle>

<section title="Introduction">

<t> IS-IS encodings allow traffic engineering (TE) attributes, such as 
bandwidth-related parameters and administrative groups, as well as 
shared risk link groups (SRLGs) to be associated with different links in 
the network topology. Different applications use these attributes to 
decide how traffic should be directed across the network.</t> 

<t> It can be useful for different applications to use different sets of 
TE attributes and SRLGs to decide how traffic is directed across the 
network. Existing IS-IS encodings only allow for one set of TE 
attributes and SRLGs to be associated with a given link. This document 
specifies encodings that allow different sets of TE attributes and SRLGs 
to be associated with a given link.</t> 


</section>

<section title="Basic assumptions">
<t> There are several different approaches that one could take to enable 
this functionality. The approach taken by this document is based on the 
following assumptions about the use of this encoding. 
</t>

<section title="Minimize disruption">
<t> The requirements of many current and future deployments of SR and 
RSVP can be satisfied using the existing encodings that support a single 
set of TE attributes and SRLGs. The encodings described here allow the 
advertisement of multiple sets of TE attributes and SRLGs. They do so in a way 
that minimizes the disruption and burden, in terms of interoperability 
testing, software upgrades, and overall complexity, on deployments that
do not need this more complex fucntionality.</t>
</section>

<section title="Maximize flexibilty">
<t> Future applications are difficult to predict, especially as 
network operators deploy their own customized, centralized controllers. 
The encodings described here does not try to associate TE attributes and 
SRLGs with particular applications. Instead, they allow TE attributes 
and SRLGs to be organized into sets, using groupings that make most 
sense for the network operator's particular use case. The network 
advertises these TE attributes and SRLGs with their associated TE 
attribute and SRLG set identifiers, and different applications use this 
information as they see fit. The authors believe that this approach 
provides the greatest flexibility for those networks that are likely to 
require these more complex capabilities.</t> 

</section>

</section>
    
<section anchor="sec_te_attribute_set_id" title="TE Link Attributes that would benefit from this new functionality">

<t> There are currently 36 sub-TLVs defined for TLV#22 (as well as
TLVs #23, #141, #222, and #223.)  We draw a distinction between two types of sub-TLVs 
in TLV#22.  Some sub-TLVs (such as the IPv4 interface address and neighbor address 
sub-TLVs) are used to identify a link.  In this document, we refer to these as
TE link identifier sub-TLVs.  Below is a complete list of the sub-TLVs in TLV#22 that
we classify as TE link identifier sub-TLVs.
</t>  

<figure title="sub-TLVs of TLV#22 classified as TE link identifier sub-TLVs">
<artwork align="left" ><![CDATA[
Type     Description                
-------  -----------------------------
4        Link Local/Remote Identifiers
6        IPv4 interface address
8        IPv4 neighbor address
12       IPv6 Interface Address
13       IPv6 Neighbor Address
]]></artwork>
</figure> 

<t> Since TE link identifier sub-TLVs are used to identify links, it does not make
sense to allow these sub-TLVs to be advertised more than once with different values 
for a given link.
</t>

<t>  In principle, the remaining 31 sub-TLVs currently defined for TLV#22 are
candidates for enabling the advertisment of different values scoped by a TE 
attribute set identifier.  However, for this document we only specify this
new functionality for the following subset of TE link attributes.</t>

<figure anchor="fig_te_link_attribute_sub_tlvs_specified" title="TE link attributes sub-TLVs given the ability to be advertised with 
different values scoped by TE attribute set identifier">
<artwork align="left" ><![CDATA[
Type     Description                
-------  -----------------------------
3        Administrative group (color)
9        Maximum link bandwidth
10       Maximum reservable link bandwidth
11       Unreserved bandwidth
14       Extended Administrative Group
18       TE Default metric
33       Unidirectional Link Delay
34       Min/Max Unidirectional Link Delay
35       Unidirectional Delay Variation
36       Unidirectional Link Loss
37       Unidirectional Residual Bandwidth
38       Unidirectional Available Bandwidth
39       Unidirectional Utilized Bandwidth
]]></artwork>
</figure> 

   
<t> The new TE Attribute Set Identifier is a 32-bit value that identifies a 
set of attributes. The TE Attribute Set Identifier with a value of zero is special.
Existing encodings for advertising attributes that do not explicitly support the
inclusion of the TE Attribute Set Identifier are now understood to implicitly 
advertise attributes with the TE Attribute Set Identifier set to zero.
In this framework, existing implementations using the existing encodings 
already support the advertisement of attributes with the TE attibute set id = 0. </t>

<t> In order to ensure a consistent view of the attribute set scoped attributes,
for encodings that explicitly support the TE Attribute Set Identifier, 
advertising an attribute with TE Attribute Set Identifier set to 
zero is not allowed.</t>

</section>
    
<section anchor="sec_link_attribute_set_sub_tlv" title="Link Attribute Set sub-TLV">

<t> The Link Attribute Set sub-TLV is a new sub-TLV for TLVs 22, 23, 141, 
222, and 223. It allows multiple values of a given TE link attribute to be
advertised for the same link, scoped by the TE Attribute Set ID.
</t>

<t>
<list style="hanging">
<t hangText="Type:">To be assigned by IANA (suggested value 101)</t>

<t hangText="Length:">Number of octets in the value field (1 octet)</t>

<t hangText="Value:">

	<list style="hanging">
	
	<t hangText="TE Attribute Set Identifier:"> A 32-bit value containing the non-zero 
		TE Attribute Set Identifier that identifies a set of attributes. The Link 
		Attribute Set sub-TLV MUST be ignored if the TE Attribute Set Identifier is 
		zero. This ensures a consistent view of the attribute set scoped link 
		attributes, where the Link Attribute sub-TLVs advertised directly 
		in TLV#22 are now understood to be implicitly advertised with the
		TE Attribute Set Identifier equal to zero. </t>

	<t hangText="Link Attribute sub-sub-TLVs:"> 
	    The format of these Link Attribute 
		sub-sub-TLVs matches the existing formats for the Link Attribute 
		sub-TLVs defined in <xref target="RFC5305"/> and <xref target="RFC7810"/>.
		Each Link Attribute sub-sub-TLV advertised in a given Link Attribute Set sub-TLV is 
		associated with the TE Attribute Set Identifier in the Link Attribute Set 
		sub-TLV.  <xref target="fig_te_link_attribute_sub_tlvs_specified"/>
		shows the subset of existing Link Attributes sub-TLVs that we are specifying 
		in this document.</t>

	</list>

 </t>


</list>
</t>
 
</section>
   
<section anchor="sec_te_attribute_set_usage" title="TE Attribute Set usage">

<t> The TE attribute set uses a simple substitution semantics.  We consider the 
TE attribute set with identifier=0 to be the default TE attribute set.
An application receiving attributes in the default TE attribute set will use
those default TE attributes, unless it receives attributes in the one non-default
TE attribute set that it has been configured or programmed to consider.
</t>

<t> In many network scenarios, all of the applications will only need to 
use a single common set of TE attributes advertised with their existing encodings.
In this framework, these applications will all be using TE attribute set = 0, the 
default TE attribute set. </t>

<figure title="Scenario where all applications use a single common set of TE attributes">
<artwork align="left" ><![CDATA[
Application     Atribute set id               
-----------     ---------------
A                 0 (implicit)
B                 0 (implicit)
C                 0 (implicit)
]]></artwork>
</figure> 

<t> In some scenarios, a network operator will need to advertise different 
values of a given attribute for a given link. Consider a scenario where 
applications D, E, and F need common values for all TE link attributes, 
except for sub-TLV#9 (Maximum link 
bandwidth).  Applications D and E use a common value for sub-TLV#9,  
while application F needs a different value for sub-TLV#9. 
This scenario is supported by having each link advertise all sub-TLVs 
in TLV#22 as they are advertised today.  These advertisements are
understood to be advertised with the TE attribute set id = 0. Applications D
and E only need to use these advertisements.  Links also advertise
sub-sub-TLV#9 in the TE Atribute Set sub-TLV with TE attribute set id = 1.
Application F is configured to use attribute set id = 1. This means that application
F first looks for the value of each attribute scoped for TE attribute set = 1.
If it is present, application F uses that attribute set scoped value.
If it is not present, application F uses the value in the default TE attribute set
(id=0).
 </t>

 <figure title="Scenario where applications need different values for some attributes">
<artwork align="left" ><![CDATA[
Application     Atribute set id               
-----------     ---------------
D                 0 (implicit)
E                 0 (implicit)
F                 1
]]></artwork>
</figure> 

<t> From a standardization perspective, there is not intended to be any 
fixed mapping between a given TE Attribute Set Identifier and a given 
application. A network operator wishing to advertise different attribute 
sets could configure the network equipment to advertise attributes with 
different values of the TE Attribute Set Identifier based on their 
objectives. The different applications (be they controller-based 
applications or distributed applications) would make use of the 
different attribute sets based on convention within that network. 
</t>
	
</section>

<section anchor="sec_attribute_set_scoped_srlg_tlv" title="SRLG Set Scoped SRLG TLV">

<t> A new TLV is defined to allow SRLGs to be advertised for a given link 
and associated with a specific SRLG set identifier. Although 
similar in functionality to TLV 138 (defined by <xref 
target="RFC5307"/>) and TLV 139 (defined by <xref target="RFC6119"/>), 
a single TLV provides support for IPv4, IPv6, and unnumbered identifiers 
for a link. Unlike TLVs 138/139 it utilizes sub-TLVs to encode the link 
identifiers in order to provide the flexible formatting required to 
support multiple link identifier types. 
</t>

<t>
<list style="hanging">
<t hangText="Type:">To be assigned by IANA (suggested value 238)</t>

<t hangText="Length:">Number of octets in the value field (1 octet)</t>

<t hangText="Value:">

	<list style="hanging">
	
	<t hangText="Neighbor System-ID + pseudo-node ID (7 octets)"> </t>

	<t hangText="SRLG Set Identifier:"> A 32-bit value containing the non-zero 
		SRLG Set Identifier that identifies a set of SRLGs. The 
		SRLG Set Scoped SRLG TLV MUST be ignored if the SRLG Set Identifier is 
		zero. This ensures a consistent view of the SRLG set scoped link 
		attributes, where the SRLGs advertised directly in TLV#138 and TLV#139
		are now understood to be implicitly advertised with the
		TE Attribute Set Identifier equal to zero.</t>

	<t hangText="Length of sub-TLVs in octets (1 octet)"> </t>
	<t hangText="Link Identifier sub-TLVs (variable)"> </t>
	<t hangText="0 or more SRLG Values (Each value is 4 octets)"> </t>

	</list>

 </t>
 
<t>
The following Link Identifier sub-TLVs are defined. The type
values are only suggested values.  The actual values will 
be assigned by IANA.  However, as
the formats are identical to existing sub-TLVs defined for
TLVs 22, 23, 141, 222, and 223 the assignment of the suggested sub-TLV
types is strongly encouraged.
</t>

</list>
</t>
     
<figure>
<artwork align="left" ><![CDATA[
Type     Description                
-------  -----------------------------
4        Link Local/Remote Identifiers
6        IPv4 interface address
8        IPv4 neighbor address
12       IPv6 Interface Address
13       IPv6 Neighbor Address
]]></artwork>
</figure> 

<t>
At least one set of link identifiers (IPv4, IPv6, or unnumbered) MUST
be present.  TLVs which do not meet this requirement MUST be ignored.
</t>	 

<t>
Multiple TLVs for the same link MAY be advertised.
</t>
 
</section>
    
<section anchor="sec_srlg_set_usage" title="SRLG Set usage">	

<t> The new SRLG Set Identifier is a 32-bit value that identifies a 
set of SRLGs. The SRLG Set Identifier with a value of zero is special.
Existing encodings for advertising SRLGs that do not explicitly support the
inclusion of the SRLG Set Identifier are now understood to implicitly 
advertise SRLGs with the SRLG Set Identifier set to zero.
In this framework, existing implementations using the existing encodings 
already support the advertisement of SRLGs with the SRLG set id = 0. </t>

<t> In order to ensure a consistent view of the SRLG set scoped SRLGs,
for encodings that explicitly support the SRLG Set Identifier, 
advertising an attribute with SRLG Set Identifier set to 
zero is not allowed.</t>

<t> The SRLG set uses additive semantics. An application receiving SRLGs 
scoped with different SRLG set identifiers will take the union of the 
SRLGs in each SRLG set that the application is programmed to take into 
consideration. Given the additive semantics of SRLG sets, we do not  
use the SRLGs with SRLG set identifier = 0 as a default 
value in the absence of other SRLGs with non-zero SRLG set identifier.
</t>

<t> The following example illustrates the expected use of the 
advertising SRLGs scoped with SRLG set identifiers.  SRLGs in networks often
follow a natural grouping into sets.  As a concrete example, assume that 
one set of SRLGs corresponds to links within a metro area (intra-city SRLGs).
A second set of SRLGs corresponds to links between metro area (inter-city SRLGs).
A third set of SRLGs corresponds to links between continents on undersea cables
(inter-continental SRLGs).  A reasonable mapping of these natural SRLG groupings
to SRLG set identifier is shown below in <xref target="fig_natural_mapping_of_srlgs"/>.
The network would be configured to advertise SRLGs scoped with these SRLG set identifiers.</t>

 <figure anchor="fig_natural_mapping_of_srlgs" 
 title="Example mapping of natural SRLG groupings to SRLG set identifier">
<artwork align="left" ><![CDATA[
Natural SRLG groupings     SRLG set id               
-----------------------    -----------
intra-city SRLGs               1		 		 
inter-city SRLGs               2
inter-continental SRLGs        3
]]></artwork>
</figure> 

<t> Assume that the network operator starts out with two applications.  
Application G should take into account all three groups of SRLGs as path
constraints: intra-city, inter-city, and inter-continental SRLGs.  Instead,
application H should only take into account inter-city and inter-continental SRLGs. 
This can be accomplished by having application G use union of SRLG sets 1, 2, and 3, 
while application H uses the union of SRLG sets 2 and 3, as shown in 
<xref target="fig_application_to_srlg_set_id_mapping1"/>.
 
</t>

<figure anchor="fig_application_to_srlg_set_id_mapping1" 
 title="Example usage of SRLG sets by applications">
<artwork align="left" ><![CDATA[
Application                SRLG set ids               
-----------------------    ------------
     G                        1+2+3	 		 
     H                        2+3
]]></artwork>
</figure> 

<t> This accomplishes the goals of the network operator in a very natural way.</t>

<t> Now suppose that the network operator introduces a third application, application J,  that
should only take into account intra-city and inter-city SRLGs.  This can be accomplished 
without modifying any of the SRLG advertisements.  The new application J need only be programmed
or configured to take use the union of SRLG sets 1 and 2, as  as shown in 
<xref target="fig_application_to_srlg_set_id_mapping2"/>.
</t>

<figure anchor="fig_application_to_srlg_set_id_mapping2" 
 title="The simplicity of adding a new application">
<artwork align="left" ><![CDATA[
Application                SRLG set ids               
-----------------------    ------------
     G                        1+2+3	 		 
     H                        2+3
     J                        1+2
]]></artwork>
</figure> 

<t> If application J is a centralized controller-based application, the new 
application can be introduced with even touching the network itself.
</t>

</section>
	
<section anchor="IANA" title="IANA Considerations">
<t>IANA is requested to create a new sub-TLV, the Link Attribute 
Set sub-TLV for TLVs 22, 23, 141, 222, and 223.</t>
	  
<figure>
<artwork align="left"><![CDATA[
Type     Description                 22 23 141 222 223 Ref.
-------  --------------------------- -- -- --- --- --- -------
TBA1     Link Attribute Set sub-TLV  y  y   y   y   y  [This
                                                        draft]
]]></artwork>
</figure> 

<t>IANA is requested to create a new TLV, the SRLG Set 
Scoped SRLG TLV.</t>
	  
<figure>
<artwork align="left"><![CDATA[
Type     Description             IIH SNP LSP Purge Ref.
-------  ----------------------- --- --- --- ----- ------
TBA2     TE Attribute Set Scoped  n   n   y    n   [This
         SRLG TLV                                  draft]
]]></artwork>
</figure> 

</section>
    
    <section title="Management Considerations">
      <t>TBD
      </t>
    </section>

    <section title="Security Considerations">
      <t> TBD
      </t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements" toc="default">
	  <t> The basic format for the encoding of the Link Attribute Set sub-TLV and the 
		TE Attribute Set Scoped SRLG TLV follows the basic format of the encodings in 
		<xref target="I-D.ginsberg-isis-te-app"/>.
      </t>
    </section>

  </middle>

  <back>
  
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5305.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5307.xml"?>
	  <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6119.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.7810.xml"?>
    </references>
	
	 <references title="Informative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ginsberg-isis-te-app-00.xml"?>
    </references>
      
  </back>
</rfc>
